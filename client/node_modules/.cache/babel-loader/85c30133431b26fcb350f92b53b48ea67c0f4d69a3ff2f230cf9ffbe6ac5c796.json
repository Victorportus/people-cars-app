{"ast":null,"code":"var _jsxFileName = \"/Users/tito/Documents/Langara/4998 Advance topics develop/people-cars-app/client/src/components/CarForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { Input, Button, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_CAR = gql`\n  mutation AddCar($year: Int!, $make: String!, $model: String!, $price: Float!, $personId: ID!) {\n    addCar(year: $year, make: $make, model: $model, price: $price, personId: $personId) {\n      id\n      year\n      make\n      model\n      price\n      personId\n    }\n  }\n`;\nconst GET_PEOPLE = gql`\n  query GetPeople {\n    people {\n      id\n      firstName\n      lastName\n      cars {\n        id\n        year\n        make\n        model\n        price\n      }\n    }\n  }\n`;\nconst CarForm = ({\n  people\n}) => {\n  _s();\n  const [year, setYear] = useState('');\n  const [make, setMake] = useState('');\n  const [model, setModel] = useState('');\n  const [price, setPrice] = useState('');\n  const [personId, setPersonId] = useState('');\n  const [addCar] = useMutation(ADD_CAR, {\n    optimisticResponse: {\n      addCar: {\n        __typename: \"Car\",\n        id: Math.floor(Math.random() * 10000).toString(),\n        // Temporary ID\n        year: parseInt(year),\n        make,\n        model,\n        price: parseFloat(price),\n        personId\n      }\n    },\n    update(cache, {\n      data: {\n        addCar\n      }\n    }) {\n      const {\n        people\n      } = cache.readQuery({\n        query: GET_PEOPLE\n      });\n      const updatedPeople = people.map(person => person.id === addCar.personId ? {\n        ...person,\n        cars: [...person.cars, addCar]\n      } : person);\n      cache.writeQuery({\n        query: GET_PEOPLE,\n        data: {\n          people: updatedPeople\n        }\n      });\n    }\n  });\n  const handleSubmit = () => {\n    addCar({\n      variables: {\n        year: parseInt(year),\n        make,\n        model,\n        price: parseFloat(price),\n        personId\n      }\n    });\n    setYear('');\n    setMake('');\n    setModel('');\n    setPrice('');\n    setPersonId('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: year,\n      onChange: e => setYear(e.target.value),\n      placeholder: \"Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: make,\n      onChange: e => setMake(e.target.value),\n      placeholder: \"Make\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: model,\n      onChange: e => setModel(e.target.value),\n      placeholder: \"Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      placeholder: \"Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: personId,\n      onChange: value => setPersonId(value),\n      placeholder: \"Select Person\",\n      style: {\n        width: 200\n      },\n      children: people.map(person => /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: person.id,\n        children: [person.firstName, \" \", person.lastName]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Add Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CarForm, \"oE4iJorc8hCz4e22fXEb2LTqeJE=\", false, function () {\n  return [useMutation];\n});\n_c = CarForm;\nexport default CarForm;\nvar _c;\n$RefreshReg$(_c, \"CarForm\");","map":{"version":3,"names":["React","useState","useMutation","gql","Input","Button","Select","jsxDEV","_jsxDEV","ADD_CAR","GET_PEOPLE","CarForm","people","_s","year","setYear","make","setMake","model","setModel","price","setPrice","personId","setPersonId","addCar","optimisticResponse","__typename","id","Math","floor","random","toString","parseInt","parseFloat","update","cache","data","readQuery","query","updatedPeople","map","person","cars","writeQuery","handleSubmit","variables","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Option","firstName","lastName","onClick","_c","$RefreshReg$"],"sources":["/Users/tito/Documents/Langara/4998 Advance topics develop/people-cars-app/client/src/components/CarForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { Input, Button, Select } from 'antd';\n\nconst ADD_CAR = gql`\n  mutation AddCar($year: Int!, $make: String!, $model: String!, $price: Float!, $personId: ID!) {\n    addCar(year: $year, make: $make, model: $model, price: $price, personId: $personId) {\n      id\n      year\n      make\n      model\n      price\n      personId\n    }\n  }\n`;\n\nconst GET_PEOPLE = gql`\n  query GetPeople {\n    people {\n      id\n      firstName\n      lastName\n      cars {\n        id\n        year\n        make\n        model\n        price\n      }\n    }\n  }\n`;\n\nconst CarForm = ({ people }) => {\n  const [year, setYear] = useState('');\n  const [make, setMake] = useState('');\n  const [model, setModel] = useState('');\n  const [price, setPrice] = useState('');\n  const [personId, setPersonId] = useState('');\n  const [addCar] = useMutation(ADD_CAR, {\n    optimisticResponse: {\n      addCar: {\n        __typename: \"Car\",\n        id: Math.floor(Math.random() * 10000).toString(), // Temporary ID\n        year: parseInt(year),\n        make,\n        model,\n        price: parseFloat(price),\n        personId\n      }\n    },\n    update(cache, { data: { addCar } }) {\n      const { people } = cache.readQuery({ query: GET_PEOPLE });\n      const updatedPeople = people.map(person =>\n        person.id === addCar.personId\n          ? { ...person, cars: [...person.cars, addCar] }\n          : person\n      );\n      cache.writeQuery({\n        query: GET_PEOPLE,\n        data: { people: updatedPeople },\n      });\n    }\n  });\n\n  const handleSubmit = () => {\n    addCar({ variables: { year: parseInt(year), make, model, price: parseFloat(price), personId } });\n    setYear('');\n    setMake('');\n    setModel('');\n    setPrice('');\n    setPersonId('');\n  };\n\n  return (\n    <div>\n      <Input\n        value={year}\n        onChange={e => setYear(e.target.value)}\n        placeholder=\"Year\"\n      />\n      <Input\n        value={make}\n        onChange={e => setMake(e.target.value)}\n        placeholder=\"Make\"\n      />\n      <Input\n        value={model}\n        onChange={e => setModel(e.target.value)}\n        placeholder=\"Model\"\n      />\n      <Input\n        value={price}\n        onChange={e => setPrice(e.target.value)}\n        placeholder=\"Price\"\n      />\n      <Select\n        value={personId}\n        onChange={value => setPersonId(value)}\n        placeholder=\"Select Person\"\n        style={{ width: 200 }}\n      >\n        {people.map(person => (\n          <Select.Option key={person.id} value={person.id}>\n            {person.firstName} {person.lastName}\n          </Select.Option>\n        ))}\n      </Select>\n      <Button onClick={handleSubmit}>Add Car</Button>\n    </div>\n  );\n};\n\nexport default CarForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}