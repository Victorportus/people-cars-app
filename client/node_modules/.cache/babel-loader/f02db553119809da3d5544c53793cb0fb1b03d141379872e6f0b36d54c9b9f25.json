{"ast":null,"code":"var _jsxFileName = \"/Users/tito/Documents/Langara/4998 Advance topics develop/people-cars-app/client/src/components/PersonForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { Form, Input, Button, Row } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_PERSON = gql`\n  mutation AddPerson($firstName: String!, $lastName: String!) {\n    addPerson(firstName: $firstName, lastName: $lastName) {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\nconst PersonForm = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [addPerson] = useMutation(ADD_PERSON, {\n    update(cache, {\n      data: {\n        addPerson\n      }\n    }) {\n      cache.modify({\n        fields: {\n          people(existingPeople = []) {\n            const newPersonRef = cache.writeFragment({\n              data: addPerson,\n              fragment: gql`\n                fragment NewPerson on Person {\n                  id\n                  firstName\n                  lastName\n                }\n              `\n            });\n            return [...existingPeople, newPersonRef];\n          }\n        }\n      });\n    }\n  });\n  const handleSubmit = () => {\n    addPerson({\n      variables: {\n        firstName,\n        lastName\n      }\n    });\n    setFirstName('');\n    setLastName('');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    onFinish: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"First Name\",\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Last Name\",\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Add Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonForm, \"HEpuHp/a04W5oymiyKcrehOhrQA=\", false, function () {\n  return [useMutation];\n});\n_c = PersonForm;\nexport default PersonForm;\nvar _c;\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"names":["React","useState","useMutation","gql","Form","Input","Button","Row","jsxDEV","_jsxDEV","ADD_PERSON","PersonForm","_s","firstName","setFirstName","lastName","setLastName","addPerson","update","cache","data","modify","fields","people","existingPeople","newPersonRef","writeFragment","fragment","handleSubmit","variables","layout","onFinish","children","Item","label","required","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","htmlType","_c","$RefreshReg$"],"sources":["/Users/tito/Documents/Langara/4998 Advance topics develop/people-cars-app/client/src/components/PersonForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { Form, Input, Button, Row } from 'antd';\n\nconst ADD_PERSON = gql`\n  mutation AddPerson($firstName: String!, $lastName: String!) {\n    addPerson(firstName: $firstName, lastName: $lastName) {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n\nconst PersonForm = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [addPerson] = useMutation(ADD_PERSON, {\n    update(cache, { data: { addPerson } }) {\n      cache.modify({\n        fields: {\n          people(existingPeople = []) {\n            const newPersonRef = cache.writeFragment({\n              data: addPerson,\n              fragment: gql`\n                fragment NewPerson on Person {\n                  id\n                  firstName\n                  lastName\n                }\n              `\n            });\n            return [...existingPeople, newPersonRef];\n          }\n        }\n      });\n    }\n  });\n\n  const handleSubmit = () => {\n    addPerson({ variables: { firstName, lastName } });\n    setFirstName('');\n    setLastName('');\n  };\n\n  return (\n    <Form layout=\"vertical\" onFinish={handleSubmit}>\n      <Form.Item label=\"First Name\" required>\n        <Input value={firstName} onChange={e => setFirstName(e.target.value)} />\n      </Form.Item>\n      <Form.Item label=\"Last Name\" required>\n        <Input value={lastName} onChange={e => setLastName(e.target.value)} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">Add Person</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default PersonForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}